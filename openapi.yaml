openapi: 3.0.3
info:
  title: Expense Tracking API
  version: 1.0.0
  description: API for managing accounts, categories, debtors, transactions, and debtor transactions (dtrans).

servers:
  - url: http://localhost:3000/api

paths:
  /health:
    get:
      summary: Health check
      responses:
        "200":
          description: API is healthy

  /accounts:
    get:
      summary: List all accounts
      responses:
        "200":
          description: List of accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Account"
    post:
      summary: Create an account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
      responses:
        "201":
          description: Account created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"

  /categories:
    get:
      summary: List all categories
      responses:
        "200":
          description: List of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"
    post:
      summary: Create a category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
      responses:
        "201":
          description: Category created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"

  /debtors:
    get:
      summary: List all debtors
      responses:
        "200":
          description: List of debtors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Debtor"
    post:
      summary: Create a debtor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Debtor"
      responses:
        "201":
          description: Debtor created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Debtor"

  /transactions:
    get:
      summary: List all transactions
      responses:
        "200":
          description: List of transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
    post:
      summary: Create a transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Transaction"
      responses:
        "201":
          description: Transaction created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"

  /transactions/{id}:
    get:
      summary: Get transaction by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Transaction details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
    put:
      summary: Update transaction by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Transaction"
      responses:
        "200":
          description: Transaction updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
    delete:
      summary: Delete transaction by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Transaction deleted

  /dtrans:
    get:
      summary: List all debtor transactions
      responses:
        "200":
          description: List of debtor transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DTrans"
    post:
      summary: Create a debtor transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DTrans"
      responses:
        "201":
          description: Debtor transaction created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTrans"

  /dtrans/{id}:
    get:
      summary: Get debtor transaction by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Debtor transaction details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTrans"
    put:
      summary: Update debtor transaction by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DTrans"
      responses:
        "200":
          description: Debtor transaction updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTrans"
    delete:
      summary: Delete debtor transaction by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Debtor transaction deleted

  /dtrans/filter/{id}:
    get:
      summary: Get filtered debtor transactions by debtor ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Filtered debtor transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DTrans"

  /transaction-with-dtrans:
    post:
      summary: Create transaction with debtor transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transaction:
                  $ref: "#/components/schemas/Transaction"
                dtrans:
                  $ref: "#/components/schemas/DTrans"
      responses:
        "201":
          description: Created transaction with debtor transaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  transaction:
                    $ref: "#/components/schemas/Transaction"
                  dtrans:
                    $ref: "#/components/schemas/DTrans"

components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        balance:
          type: number
          default: 0
      required: [name]

    Category:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required: [name]

    Debtor:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required: [name]

    Transaction:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum: [income, expense]
        amount:
          type: number
        account:
          type: string
        date:
          type: string
          format: date-time
        to:
          type: string
          nullable: true
        category:
          type: string
        status:
          type: string
          enum: [open, completed, pending]
          default: open
      required: [type, amount, account, category]

    DTrans:
      type: object
      properties:
        id:
          type: string
        debtor:
          type: string
        transactions:
          type: array
          items:
            type: object
            properties:
              transaction:
                type: string
              expectedReturnDate:
                type: string
                format: date-time
                nullable: true
              actualReturnDate:
                type: string
                format: date-time
                nullable: true
              creditedTillDate:
                type: number
                default: 0
      required: [debtor, transactions]
